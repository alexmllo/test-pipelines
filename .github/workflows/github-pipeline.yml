name: Test pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch:
    inputs:
      environment:
        description: "Selecciona el entorno"
        required: false
        options:
          - dev
          - pro
      # job_to_run:
      #   description: "Job to run"
      #   required: true
      #   type: choice
      #   default: 'all'
      #   options:
      #     - step1
      #     - parallel
      #     - step4
      #     - all

jobs:
  step1:
    name: step1
    # if: ${{ inputs.job_to_run == 'step1' || inputs.job_to_run == 'all' }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
      options: --workdir /github/workspace
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TEST_PIPELINES }}
      - name: Step 1 - ejecucion
        run: |
          # cd $GITHUB_WORKSPACE
          apt update -y && apt install git -y
          echo "Hello World" > test.txt
          git add test.txt
          git commit -m "Add test file"
          git push
        # env:
          # GITHUB_WORKSPACE: /github/workspace
  parallel:
    name: parallel
    # if: ${{ github.event.inputs.job_to_run == 'parallel' || github.event.inputs.job_to_run == 'all' }}
    needs: step1
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    strategy:
      matrix:
        step: [step2, step3]
    steps:
      - name: CHeckout code
        uses: actions/checkout@v3
      - name: Step 2 - ejecucion
        run: echo "Ejecutando ${{ matrix.step }}"
  step4:
    name: step4
    # if: ${{ github.event.inputs.job_to_run == 'step4' || github.event.inputs.job_to_run == 'all' }}
    needs: [parallel]
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    steps:
      - name: Check entorno
        if: ${{ inputs.environment == 'production' }}
        run: echo "En entorno production"
      - name: Finalizacion
        run: echo "Pipeline completa despues de step2 y step3"
